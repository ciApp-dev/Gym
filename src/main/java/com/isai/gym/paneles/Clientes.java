/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.isai.gym.paneles;

import com.isai.gym.clases.Huella;
import com.isai.gym.clases.OperacionesDB;
import com.isai.gym.clases.Utilerias;
import com.isai.gym.submenus.SubHuella;
import java.awt.Color;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;

/**
 *
 * @author isai_
 */
public class Clientes extends javax.swing.JPanel implements Runnable{
        Utilerias util=new Utilerias();
        OperacionesDB operDB=new OperacionesDB();
        public Huella huella;
        SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");
        boolean banHuella,banUso=true;
        SubHuella sub=new SubHuella();
        Thread hilo;
        
        private String identificadorHuella="";
        
    /** Creates new form Clientes */
    public Clientes() {
        initComponents();
        
        
        btnGroupManos.add(rbtnIzquierda);
        btnGroupManos.add(rbtnDerecha);
        
        rbtnDerecha.setSelected(true);
        cmbDedo.setSelectedIndex(1);
     util.llenarTabla(tbPrincipalClientes, "clientes");
     
     popupTable();
     hilo=new Thread(this,"ventana");
     hilo.start();
    
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        btngroup = new javax.swing.ButtonGroup();
        btnGroupManos = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtApellidos = new javax.swing.JTextField();
        panelHuella = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMsg = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        lblMsg = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbDedo = new javax.swing.JComboBox<>();
        rbtnIzquierda = new javax.swing.JRadioButton();
        rbtnDerecha = new javax.swing.JRadioButton();
        lblImagen = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPrincipalClientes = new javax.swing.JTable();
        panelMsg = new javax.swing.JPanel();

        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(Color.decode(util.colorFondo)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1052, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setBackground(Color.decode(util.colorFondo)
        );
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 0)), "Menu Clientes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 18), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel2.setInheritsPopupMenu(true);
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(Color.decode(util.colorFondo)
        );
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel5.setText("Nombre:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        jPanel3.add(jLabel5, gridBagConstraints);

        txtNombre.setColumns(10);
        txtNombre.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 0);
        jPanel3.add(txtNombre, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel6.setText("Apellidos: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        jPanel3.add(jLabel6, gridBagConstraints);

        txtApellidos.setColumns(10);
        txtApellidos.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 0);
        jPanel3.add(txtApellidos, gridBagConstraints);

        jPanel2.add(jPanel3, java.awt.BorderLayout.NORTH);

        panelHuella.setBackground(Color.decode(util.colorFondo)
        );
        panelHuella.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registro Huella", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 17))); // NOI18N
        panelHuella.setLayout(new java.awt.BorderLayout());

        txtMsg.setColumns(20);
        txtMsg.setRows(5);
        jScrollPane2.setViewportView(txtMsg);

        panelHuella.add(jScrollPane2, java.awt.BorderLayout.SOUTH);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel6.setBackground(Color.decode(util.colorFondo)
        );
        jPanel6.setLayout(new java.awt.GridBagLayout());

        lblMsg.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        lblMsg.setText("Favor de Colocar Dedo...");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 19;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 97;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(19, 0, 3, 0);
        jPanel6.add(lblMsg, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel3.setText("Identificador: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 10, 10);
        jPanel6.add(jLabel3, gridBagConstraints);

        cmbDedo.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        cmbDedo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pulgar", "Indice", "Medio", "Anular ", "Me√±ique" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.gridwidth = 2;
        jPanel6.add(cmbDedo, gridBagConstraints);

        rbtnIzquierda.setBackground(Color.decode(util.colorFondo)
        );
        rbtnIzquierda.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        rbtnIzquierda.setText("Mano Izquierda");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel6.add(rbtnIzquierda, gridBagConstraints);

        rbtnDerecha.setBackground(Color.decode(util.colorFondo)
        );
        rbtnDerecha.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        rbtnDerecha.setText("Mano Derecha");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel6.add(rbtnDerecha, gridBagConstraints);

        jPanel4.add(jPanel6, java.awt.BorderLayout.NORTH);

        lblImagen.setBackground(Color.decode(util.colorFondo)
        );
        lblImagen.setForeground(Color.decode(util.colorFondo)
        );
        jPanel4.add(lblImagen, java.awt.BorderLayout.CENTER);

        panelHuella.add(jPanel4, java.awt.BorderLayout.LINE_END);

        jPanel2.add(panelHuella, java.awt.BorderLayout.CENTER);

        jPanel5.setBackground(Color.decode(util.colorFondo)
        );
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jButton1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ic_32/ic_disquete.png"))); // NOI18N
        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 0);
        jPanel5.add(jButton1, gridBagConstraints);

        jButton2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ic_32/ic_cancelar.png"))); // NOI18N
        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel5.add(jButton2, gridBagConstraints);

        jPanel2.add(jPanel5, java.awt.BorderLayout.SOUTH);

        add(jPanel2, java.awt.BorderLayout.EAST);
        jPanel2.getAccessibleContext().setAccessibleDescription("");

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        tbPrincipalClientes.setBackground(new java.awt.Color(255, 255, 255));
        tbPrincipalClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbPrincipalClientes.setSelectionBackground(Color.decode(util.colorDark)
        );
        tbPrincipalClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbPrincipalClientesMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tbPrincipalClientes);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

        panelMsg.setPreferredSize(new java.awt.Dimension(1052, 10));

        javax.swing.GroupLayout panelMsgLayout = new javax.swing.GroupLayout(panelMsg);
        panelMsg.setLayout(panelMsgLayout);
        panelMsgLayout.setHorizontalGroup(
            panelMsgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1052, Short.MAX_VALUE)
        );
        panelMsgLayout.setVerticalGroup(
            panelMsgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        add(panelMsg, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        operacionGuardar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
       
        
    }//GEN-LAST:event_formFocusGained

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        limpiarCampos();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tbPrincipalClientesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPrincipalClientesMousePressed
        // TODO add your handling code here:
         if ( SwingUtilities.isLeftMouseButton(evt)) {
                                         
                                       } else {
                                            if ( SwingUtilities.isRightMouseButton(evt)) {
                                               Point p = evt.getPoint();
                                               int rowNumber = tbPrincipalClientes.rowAtPoint( p );
                                               ListSelectionModel modelo = tbPrincipalClientes.getSelectionModel();
                                               modelo.setSelectionInterval( rowNumber, rowNumber );
                                           }
         }
    }//GEN-LAST:event_tbPrincipalClientesMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnGroupManos;
    private javax.swing.ButtonGroup btngroup;
    private javax.swing.JComboBox<String> cmbDedo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JLabel lblImagen;
    public javax.swing.JLabel lblMsg;
    public javax.swing.JPanel panelHuella;
    private javax.swing.JPanel panelMsg;
    private javax.swing.JRadioButton rbtnDerecha;
    private javax.swing.JRadioButton rbtnIzquierda;
    private javax.swing.JTable tbPrincipalClientes;
    private javax.swing.JTextField txtApellidos;
    public javax.swing.JTextArea txtMsg;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables

    
    private void operacionGuardar(){
        
        
        if(rbtnIzquierda.isSelected()){
            identificadorHuella=cmbDedo.getSelectedItem()+" izquierdo";
        }else{
            identificadorHuella=cmbDedo.getSelectedItem()+" derecho";
        }
        
        String [][] datos={{"nombre",txtNombre.getText().toUpperCase()},
                            {"apellidos",txtApellidos.getText().toUpperCase()},
                            {"estado","ACTIVO"}};
        
        if(verificador()){
            int id=0;
            int conf=JOptionPane.showConfirmDialog(this,"¬øDesea guardar al cliente: "+txtNombre.getText()+" "+txtApellidos.getText()+"?");
            if(conf==0){
                id=operDB.guardarRegresandoId(datos, "clientes");
        if(id>0){
            if(huella.guardarHuella(id,identificadorHuella.toUpperCase())){
            limpiarCampos();
            util.llenarTabla(tbPrincipalClientes, "clientes");
            }else{
                System.out.println("Ocurrio un problema al guardar la huella");
            }   
        }else{
            System.out.println("Ocurrio un problema al obtener el id guardado");
        }
            }else{
                
            }
        
        }else{
            
        }
        
        
    }
    
    public void valorHuella(Huella huella){
        this.huella=huella;
        
        iniciarHuella();
        
        
    }
    
    public void iniciarHuella(){
        this.huella.reclutador.clear();
        this.huella.stop();
        this.huella.start();
        banUso=true;
        huella.setLabel(lblImagen,lblMsg,txtMsg,panelHuella);
        huella.estadoHuellas();
        
        
    }
    public void limpiarCampos(){
        txtNombre.setText("");
        txtApellidos.setText("");
        btngroup.clearSelection();
        huella.reclutador.clear();
        huella.stop();
        huella.start();
        huella.estadoHuellas();
        huella.setLabel(lblImagen,lblMsg,txtMsg,panelHuella);
        panelHuella.setBackground(Color.white);
        lblImagen.setIcon(null);
        cmbDedo.setSelectedIndex(0);
        
    }
    
    public boolean verificador(){
        boolean dev;
        Date hoy=new Date();
        if(txtNombre.getText().length()>0){
            dev=true;
            if(txtApellidos.getText().length()>0){
                dev=true;
                    
                        if(huella.banderaGuardado){
                            dev=true;
                            if(identificadorHuella.length()>0){
                                dev=true;
                            }else{
                                JOptionPane.showMessageDialog(this, "Verifique el campo para identificar la huella", "Campo Vacio", JOptionPane.WARNING_MESSAGE);
                            dev=false;
                            }
                        }else{
                            JOptionPane.showMessageDialog(this, "Verifique el proceso de huella", "Huella no detectada", JOptionPane.WARNING_MESSAGE);
                            dev=false;
                        }
                    }else{
                        JOptionPane.showMessageDialog(this, "Verifique el campo de sexo", "Campo no seleccionado", JOptionPane.WARNING_MESSAGE);
                        dev = false;
                    }
                
            
        }else{
            JOptionPane.showMessageDialog(this, "Verifique el campo de nombre", "Campo Vacio", JOptionPane.WARNING_MESSAGE);
            dev=false;
        }
    return dev;   
    }
    
    
    
    public void popupTable(){
		
	

		
		JPopupMenu popupmenu= new JPopupMenu();
		JMenuItem menuitem1= new JMenuItem("Eliminar",new ImageIcon(getClass().getResource("/ic_24/ic_delete.png")) );
		JMenuItem menuitem2= new JMenuItem("Agregar Huella",new ImageIcon(getClass().getResource("/ic_24/ic_huella.png")) );
		
	
		
		menuitem1.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent arg0) {
				// TODO Auto-generated method stub
				
				
				
			}
			
		});
		menuitem2.addActionListener(new ActionListener(){
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        
                        int filaSelect=tbPrincipalClientes.getSelectedRow();
                        int idEnviar=Integer.parseInt(tbPrincipalClientes.getValueAt(filaSelect, 0).toString());
                        String nombreEnviar=""+tbPrincipalClientes.getValueAt(filaSelect, 1).toString()+" "+tbPrincipalClientes.getValueAt(filaSelect, 2).toString();
                        
                        if(util.verificarInt(""+idEnviar) && util.verificarString(nombreEnviar)){
                            
                      
                        sub.datosRecibidos(idEnviar, nombreEnviar);
                        
                        util.centrarSubventana(sub,600,450);
                        sub.show();
                        sub.iniciarHuella(huella);
                        banUso=false;
                        
                        }else{
                            panelMsg.setBackground(Color.decode(util.colorMal));
                        }
                    }
                    
                });
		
		popupmenu.add(menuitem1);
                popupmenu.add(menuitem2);
		
		tbPrincipalClientes.setComponentPopupMenu(popupmenu);
	}

    @Override
    public void run() {
        Thread currThread = Thread.currentThread();

        while (currThread.getName().equals("ventana")) {
            
            if(sub.isShowing()){
                
            }else{
                
                
                if(banUso){
                    
                }else{
                    iniciarHuella();
                }
                
                /*
                    huella.start();
                    huella.estadoHuellas();
                    huella.setLabel(lblImagen,lblMsg,txtMsg,panelHuella);*/
                    
                    
                
            }
            
            
            
        }
    }

}
