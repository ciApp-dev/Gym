/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.isai.gym.paneles;

import com.isai.gym.clases.OperacionesDB;
import com.isai.gym.clases.Utilerias;
import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author isai_
 */
public class Empleados extends javax.swing.JPanel {

    
    private boolean banEdit=false;
    Utilerias util=new Utilerias();
    OperacionesDB operDB=new OperacionesDB();
    
    private int rowSelect=0;
    /**
     * Creates new form Empleados
     */
    public Empleados() {
        initComponents();
        util.llenarTabla(tbPrincipal, "vistaUsuarios");
        
        placeHolders();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        chckClientes = new javax.swing.JCheckBox();
        chckPlanes = new javax.swing.JCheckBox();
        chckCobro = new javax.swing.JCheckBox();
        chckVerificador = new javax.swing.JCheckBox();
        chckEmpleados = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtPass = new javax.swing.JPasswordField();
        txtPass2 = new javax.swing.JPasswordField();
        jPanel5 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPrincipal = new javax.swing.JTable();
        pnlMsg = new javax.swing.JPanel();

        setBackground(Color.decode(util.colorFondo)
        );
        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(Color.decode(util.colorFondo)
        );
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.Y_AXIS));

        jPanel2.setBackground(Color.decode(util.colorFondo)
        );
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos de Empleado", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 18))); // NOI18N
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel4.setBackground(Color.decode(util.colorFondo)
        );
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel1.setText("Nombre: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        jPanel4.add(jLabel1, gridBagConstraints);

        txtNombre.setColumns(10);
        txtNombre.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        jPanel4.add(txtNombre, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel2.setText("Apellidos: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        jPanel4.add(jLabel2, gridBagConstraints);

        txtApellido.setColumns(10);
        txtApellido.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        jPanel4.add(txtApellido, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel6.setText("Permisos:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        jPanel4.add(jLabel6, gridBagConstraints);

        chckClientes.setBackground(Color.decode(util.colorFondo)
        );
        chckClientes.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        chckClientes.setText("Clientes");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanel4.add(chckClientes, gridBagConstraints);

        chckPlanes.setBackground(Color.decode(util.colorFondo)
        );
        chckPlanes.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        chckPlanes.setText("Planes");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanel4.add(chckPlanes, gridBagConstraints);

        chckCobro.setBackground(Color.decode(util.colorFondo)
        );
        chckCobro.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        chckCobro.setText("Cobro");
        chckCobro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chckCobroActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanel4.add(chckCobro, gridBagConstraints);

        chckVerificador.setBackground(Color.decode(util.colorFondo)
        );
        chckVerificador.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        chckVerificador.setText("Verificador");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanel4.add(chckVerificador, gridBagConstraints);

        chckEmpleados.setBackground(Color.decode(util.colorFondo)
        );
        chckEmpleados.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        chckEmpleados.setText("Empleados");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanel4.add(chckEmpleados, gridBagConstraints);

        jPanel2.add(jPanel4, java.awt.BorderLayout.NORTH);

        jPanel1.add(jPanel2);

        jPanel3.setBackground(Color.decode(util.colorFondo)
        );
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos Usuario", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 18))); // NOI18N
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel6.setBackground(Color.decode(util.colorFondo)
        );
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel3.setText("Nombre de usuario:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel6.add(jLabel3, gridBagConstraints);

        txtUsuario.setColumns(10);
        txtUsuario.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        jPanel6.add(txtUsuario, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel4.setText("Contrase√±a: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        jPanel6.add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel5.setText("Confirmar contrase√±a: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        jPanel6.add(jLabel5, gridBagConstraints);

        txtPass.setColumns(10);
        txtPass.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txtPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPassActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        jPanel6.add(txtPass, gridBagConstraints);

        txtPass2.setColumns(10);
        txtPass2.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        jPanel6.add(txtPass2, gridBagConstraints);

        jPanel3.add(jPanel6, java.awt.BorderLayout.NORTH);

        jPanel1.add(jPanel3);

        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.X_AXIS));

        jButton1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ic_32/ic_disquete.png"))); // NOI18N
        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton1);

        jButton2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ic_32/ic_cancelar.png"))); // NOI18N
        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton2);

        jPanel1.add(jPanel5);

        add(jPanel1, java.awt.BorderLayout.EAST);

        tbPrincipal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbPrincipal.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                tbPrincipalMouseDragged(evt);
            }
        });
        tbPrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPrincipalMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbPrincipal);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
        add(pnlMsg, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void txtPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        
        if(banEdit && txtPass.getText().equals(txtPass2.getText())){
            int conf=JOptionPane.showConfirmDialog(this, "¬øDesea modificar a "+txtNombre.getText()+"?");
            if(conf==0){
            modificarEmpleados();    
            }else{
                
            }
            
        }else{
            if(txtPass.getText().equals(txtPass2.getText())){
                int conf=JOptionPane.showConfirmDialog(this, "¬øDesea guardar a "+txtNombre.getText()+"?");
                if(conf==0){
                    guardarEmpleado();
                }else{
                    
                }
                
            }else{
                util.mensajeError(this, "Las contrase√±as no coinciden");
            }
            
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void chckCobroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chckCobroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chckCobroActionPerformed

    private void tbPrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPrincipalMouseClicked
        // TODO add your handling code here:
        rowSelect=tbPrincipal.getSelectedRow();
        llenarCampos();
        banEdit=true;
    }//GEN-LAST:event_tbPrincipalMouseClicked

    private void tbPrincipalMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPrincipalMouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_tbPrincipalMouseDragged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        limpiarDatos();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void modificarEmpleados(){
        String [][]datos={{"nombrePersona",txtNombre.getText().toUpperCase()},
                      {"apellidosPersona",txtApellido.getText().toUpperCase()},
                      {"nombreUsuario",txtUsuario.getText().toUpperCase()},
                      {"password",util.encriptacion(txtPass.getText())},
                      {"permisos",permisos()},
                      {"estado","ACTIVO"},
                      {"idusuarios",tbPrincipal.getValueAt(rowSelect, 0).toString()}};
        
        if(operDB.modificar("usuarios", datos)){
            pnlMsg.setBackground(Color.decode(util.colorBien));
            limpiarDatos();
        }else{
            pnlMsg.setBackground(Color.decode(util.colorMal));
        }
        
    }

    private void guardarEmpleado(){
        
        
        
            
    String [][]datos={{"nombrePersona",txtNombre.getText().toUpperCase()},
                      {"apellidosPersona",txtApellido.getText().toUpperCase()},
                      {"nombreUsuario",txtUsuario.getText().toUpperCase()},
                      {"password",util.encriptacion(txtPass.getText())},
                      {"permisos",permisos()},
                      {"estado","ACTIVO"}};
        
                      if(operDB.guardarRegresandoId(datos,"usuarios")>0){
                          pnlMsg.setBackground(Color.decode(util.colorBien));
                          limpiarDatos();
                      }else{
                          pnlMsg.setBackground(Color.decode(util.colorMal));
                      }
                      
                      
    }
    
    private void limpiarDatos(){
        txtNombre.setText("");
        txtApellido.setText("");
        txtUsuario.setText("");
        txtPass.setText("");
        txtPass2.setText("");
        banEdit=false;
        util.llenarTabla(tbPrincipal,"vistaUsuarios");
        chckCobro.setSelected(false);
        chckClientes.setSelected(false);
        chckEmpleados.setSelected(false);
        chckPlanes.setSelected(false);
        chckVerificador.setSelected(false);
        
        
    }
    
    private void llenarCampos(){
        String [][] datosEmpleados={{"idusuarios",tbPrincipal.getValueAt(rowSelect, 0).toString()}};
        String [] datos=operDB.datosRowCondicionesAND("usuarios", datosEmpleados);
        txtNombre.setText(datos[1]);
        txtApellido.setText(datos[2]);
        txtUsuario.setText(datos[3]);
        txtPass.setText(util.Desencriptar(datos[4]));
        txtPass2.setText(util.Desencriptar(datos[4]));
        setPermisos(datos[5]);
        
    }
    private void setPermisos(String permisos){
        String [] permisosCut=permisos.split(",");
        
        if(permisosCut[0].equals("1")){
            chckClientes.setSelected(true);
        }else{
            chckClientes.setSelected(false);
        }
        if(permisosCut[1].equals("1")){
            chckPlanes.setSelected(true);
        }else{
            chckPlanes.setSelected(false);
        }
        if(permisosCut[2].equals("1")){
            chckCobro.setSelected(true);
        }else{
            chckCobro.setSelected(false);
        }
        if(permisosCut[3].equals("1")){
            chckVerificador.setSelected(true);
        }else{
            chckVerificador.setSelected(false);
        }
        if(permisosCut[4].equals("1")){
            chckEmpleados.setSelected(true);
        }else{
            chckEmpleados.setSelected(false);
        }
    }
    
    private String permisos(){
        String permisos="";
        
        if(chckClientes.isSelected()){
            permisos=permisos+"1,";
        }else{
            permisos=permisos+"0,";
        }
        if(chckPlanes.isSelected()){
            permisos=permisos+"1,";
        }else{
            permisos=permisos+"0,";
        }
        if(chckCobro.isSelected()){
            permisos=permisos+"1,";
        }else{
            permisos=permisos+"0,";
        }
        if(chckVerificador.isSelected()){
            permisos=permisos+"1,";
        }else{
            permisos=permisos+"0,";
        }
        if(chckEmpleados.isSelected()){
            permisos=permisos+"1,";
        }else{
            permisos=permisos+"0,";
        }
        
        permisos=permisos.substring(0, (permisos.length()-1));
        return permisos;
    }
    
    private void placeHolders(){
        util.placeHolder("Escribe un nombre", txtNombre, "");
        util.placeHolder("Escribe los Apellidos", txtApellido,"");
        util.placeHolder("Usuario para identificacion", txtUsuario,"");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chckClientes;
    private javax.swing.JCheckBox chckCobro;
    private javax.swing.JCheckBox chckEmpleados;
    private javax.swing.JCheckBox chckPlanes;
    private javax.swing.JCheckBox chckVerificador;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlMsg;
    private javax.swing.JTable tbPrincipal;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JPasswordField txtPass2;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
